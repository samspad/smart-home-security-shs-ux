/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smart.home.security.view;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Toolkit;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import smart.home.security.model.Notifications;
import smart.home.security.utilities.DeviceManager;
import smart.home.security.utilities.DeviceSocketManager;

/**
 *
 * @author chana
 */
public class SmartHomeSecurityFrame extends javax.swing.JFrame {

    private static SmartHomeSecurityFrame frame;
    private static Component currentComponent;
    
    /**
     * Creates new form SmartHomeSecurityFrame
     */
    public SmartHomeSecurityFrame() {
        initComponents();
        setLayout(new BorderLayout());
        pack();
        showMainPanel();
        setResizable(false);       
    }

    public static SmartHomeSecurityFrame getInstance() {
        if (frame == null) {
            frame = new SmartHomeSecurityFrame();
        }
        return frame;
    }
    
    public void replaceFramePanel(Component component) {
        currentComponent = component;
        refresh();        
    }
    
    public void refresh() {
        getContentPane().removeAll();        
        add(componentPanel(currentComponent));
        getContentPane().repaint();
        pack();        
    }
    
    private JPanel componentPanel(Component component) {
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
        container.add(component);
        if (Notifications.getInstance().UnreadNotifications()) 
        {
           
            container.add(new NotificationBanner());   
        }
        
        return container;
    }

    /**
     * Display the main panel on the frame.
     */
    private void showMainPanel() {
        replaceFramePanel(new MainPanel());
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // Load the devices from file.
        DeviceManager.loadDevices();                
        
        // Save the devices when the JVM shuts down.
        Runtime.getRuntime().addShutdownHook(new DeviceManager());
        
        // Establish connection to all devices.               
        DeviceSocketManager.getInstance().connectDevices();
        Runtime.getRuntime().addShutdownHook(DeviceSocketManager.getInstance());

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SmartHomeSecurityFrame.getInstance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
